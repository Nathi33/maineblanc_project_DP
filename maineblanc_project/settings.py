"""
Django settings for maineblanc_project.

Generated by 'django-admin startproject' using Django 5.2.4.
"""

from pathlib import Path
from django.utils.translation import gettext_lazy as _
from decouple import config
import os, socket

# ============================================
# PROJECT VERSION
# ============================================
PROJECT_VERSION = "Version Dossier Professionnel (DP)"

# ============================================
# BASE DIRECTORY
# ============================================
BASE_DIR = Path(__file__).resolve().parent.parent
LOCALE_PATHS = [BASE_DIR / 'locale']

# ============================================
# SECURITY
# ============================================
SECRET_KEY = config('SECRET_KEY', default='unsafe-secret-key-for-dev-only')
DEBUG = config('DEBUG', default=True, cast=bool)

if DEBUG: 
    ALLOWED_HOSTS = ['127.0.0.1', 'localhost']
else:
    ALLOWED_HOSTS = [
        'maineblanc-project-dp.onrender.com',
        '.onrender.com',
        ]
    
if DEBUG:
    SITE_URL = config('SITE_URL', default='http://127.0.0.1:8000')
else:
    SITE_URL = config('SITE_URL', default='https://maineblanc-project-dp.onrender.com')

# ============================================
# SESSION
# ============================================
hostname = socket.gethostname()
is_render = "render" in hostname or "onrender" in SITE_URL
is_local = DEBUG or "localhost" in SITE_URL or "127.0.0.1" in SITE_URL

SESSION_ENGINE = 'django.contrib.sessions.backends.db'
SESSION_COOKIE_NAME = 'sessionid'
SESSION_COOKIE_AGE = 60 * 60 * 24 * 7  # One week
SESSION_SAVE_EVERY_REQUEST = True

if is_local:
    print("Mode local détecté - sessions non sécurisées")
    SESSION_COOKIE_SECURE = False
    CSRF_COOKIE_SECURE = False
    SESSION_COOKIE_DOMAIN = None
    CSRF_TRUSTED_ORIGINS = [
        "http://127.0.0.1:8000",
        "http://localhost:8000",
    ]

elif is_render:
    print("Mode Render détecté - sessions sécurisées")
    SESSION_COOKIE_SECURE = True
    CSRF_COOKIE_SECURE = True
    SESSION_COOKIE_DOMAIN = None
    CSRF_TRUSTED_ORIGINS = [SITE_URL]

else:
    print("Mode production détecté - domaine maineblanc.fr")
    SESSION_COOKIE_SECURE = True
    CSRF_COOKIE_SECURE = True
    SESSION_COOKIE_DOMAIN = ".maineblanc.fr"
    CSRF_TRUSTED_ORIGINS = [
        "https://maineblanc.fr",
        "https://www.maineblanc.fr",
    ]

# ============================================
# APPLICATIONS
# ============================================
INSTALLED_APPS = [
    # Django core apps
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sitemaps',

    # Project apps
    'reservations',
    'core.apps.CoreConfig',
    'bookings.apps.BookingsConfig',
    'parler',
]

# ============================================
# MIDDLEWARE
# ============================================
MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.locale.LocaleMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'maineblanc_project.urls'

# ============================================
# TEMPLATES
# ============================================
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'core/templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.template.context_processors.media',
                'django.template.context_processors.static',
                'django.template.context_processors.tz',
                'django.contrib.messages.context_processors.messages',
                'core.context_processors.available_languages',
                'django.template.context_processors.i18n',
                'core.context_processors.global_static_version',
            ],
        },
    },
]

WSGI_APPLICATION = 'maineblanc_project.wsgi.application'

# ============================================
# DATABASE
# ============================================
if os.environ.get("RENDER") == "True":
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.sqlite3',
            'NAME': os.path.join(BASE_DIR, "db_render.sqlite3"),
        }
    }
else:
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.sqlite3',
            'NAME': os.path.join(BASE_DIR, "db.sqlite3"),
        }
    }

# ============================================
# PASSWORD VALIDATION
# ============================================
AUTH_PASSWORD_VALIDATORS = [
    {'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator'},
    {'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator'},
    {'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator'},
    {'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator'},
]

# ============================================
# INTERNATIONALIZATION
# ============================================
LANGUAGES = [
    ('fr', _('French')),
    ('en', _('English')),
    ('es', _('Spanish')),
    ('de', _('German')),
    ('nl', _('Nederlands')),
]
LANGUAGE_CODE = 'fr'
TIME_ZONE = 'Europe/Paris'
USE_I18N = True
USE_L10N = True
USE_TZ = True

# ============================================
# TRANSLATION
# ============================================
DEEPL_API_KEY = config('DEEPL_API_KEY', default='')

# ============================================
# STATIC & MEDIA FILES
# ============================================
STATIC_URL = '/static/'
STATICFILES_DIRS = [os.path.join(BASE_DIR, "static")]
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')
STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'

# ============================================
# DEFAULT PRIMARY KEY
# ============================================
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# ============================================
# EMAIL CONFIGURATION
# ============================================
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = config('EMAIL_HOST', default='smtp.gmail.com')
EMAIL_PORT = config('EMAIL_PORT', cast=int, default=587)
EMAIL_USE_TLS = config('EMAIL_USE_TLS', cast=bool, default=True)

EMAIL_HOST_USER = config('EMAIL_HOST_USER', default='')
EMAIL_HOST_PASSWORD = config('EMAIL_HOST_PASSWORD', default='')

DEFAULT_FROM_EMAIL = EMAIL_HOST_USER
ADMIN_EMAIL = config('ADMIN_EMAIL', default=EMAIL_HOST_USER)

if "render" in socket.gethostname():
    EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'

# ============================================
# LOGIN / LOGOUT
# ============================================
LOGIN_REDIRECT_URL = '/'
LOGOUT_REDIRECT_URL = '/'

# ============================================
# STRIPE CONFIGURATION
# ============================================
STRIPE_SECRET_KEY = config('STRIPE_SECRET_KEY', default='')
STRIPE_PUBLIC_KEY = config('STRIPE_PUBLIC_KEY', default='')

# ============================================
# SITE URL
# ============================================
SITE_URL = config('SITE_URL', default='http://localhost:8000')

# ============================================
# CACHE-BUSTING
# ============================================
from datetime import datetime

STATIC_VERSION = datetime.now().strftime("%Y%m%d%H%M%S")

def global_static_version(request):
    from django.conf import settings
    return {'STATIC_VERSION': settings.STATIC_VERSION}